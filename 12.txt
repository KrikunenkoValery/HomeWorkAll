#include <stdio.h>
#include <math.h>
#include <locale.h>
int llint()
{
	int num = 0;
	return num;
}
void print_bytes(void* ptr, long long int size) 
{
	unsigned char* byte_ptr = (unsigned char*)ptr;
	for (int i = 0; i < size; i++) 
	{
		printf("%02x ", byte_ptr[i]);
	}
	printf("\n");
}
int main(void)
{
	// Задание 1
	setlocale(LC_ALL, "RUS");
	int* pi, i = 5;
	double* pf, f = 2.1;
	char* pl, l = 'c';
	printf("%lu\n", sizeof(pi));
	printf("%lu\n", sizeof(pf));
	printf("%lu\n", sizeof(pl));
	// Задание 2
	float PI = 3.14159, * p1, * p2;
	p1 = p2 = &PI;
	printf("По адресу p1=%x хранится *p1=%g\n", p1, *p1);
	printf("По адресу p2=%x хранится *p2=%g\n", p2, *p2);
	// Задание 3
	int* po, o = 5;
	po = &o;
	printf("По адресу %p хранится *ptr=%g\n", po, *po); 
	po++;
	printf("По адресу %p хранится *ptr=%g\n", po, *po); 
	po--;
	printf("По адресу %p хранится *ptr=%g\n", po, *po); 
	long double* pp, x = 5;
	pp = &x;
	printf("По адресу %p хранится *ptr=%g\n", pp, *pp); 
	short unsigned int* pk, k = 5;
	pk = &k;
	printf("По адресу %p хранится *ptr=%g\n", pk, *pk); 
	int* pm, m = 5;
	pm = &m;
	printf("По адресу %p хранится *ptr=%g\n", pm, *pm);
	// Задание 4
	float array[10] = { 1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9, 10.1 };

	/*float* ptr_a = array; // указатель на начало массива
	printf("array: %p\n", array);
	printf("&array[0]: %p\n", &array[0]);
	printf("&array: %p\n", &array);

	printf("ptr_a: %p, *ptr_a: %.1f\n", ptr_a, *ptr_a); // начальное значение
	ptr_a++;
	printf("ptr_a: %p, *ptr_a: %.1f\n", ptr_a, *ptr_a);
	ptr_a += 4;
	printf("ptr_a: %p, *ptr_a: %.1f\n", ptr_a, *ptr_a);
	ptr_a -= 2;
	printf("ptr_a: %p, *ptr_a: %.1f\n", ptr_a, *ptr_a);
	for (int i = 0; i < 10; i += 2) {
		printf("%.1f ", *(array + i));
	} */
	float* ptr_a = &array[9]; // указатель на последний элемент массива

	// Проходим в обратном порядке
	for (int i = 0; i < 10; i++) {
		printf("%.1f ", *ptr_a);
		ptr_a--;
	}
	// Задание 5
	int t = 12345.0;//переменная инициализированная значением 0x12345678
	float u = 12345.0;
	double d = 12345.0;
	int* prt; //указатель для исследуемой переменной
	unsigned char * r1, * r2, * r3, * r4; //указатели на байты
	unsigned char * r; //указатель на байт
	prt = &t; //получение адреса переменной 
	r = (unsigned char*)prt; //пpеобразование типа для получения указателя на один байт 
	r1 = r + 3;// получение 4-го байта числа х
	r2 = r + 2;
	r3 = r + 1;
	r4 = r; // получение первого байта числа х
	printf("\n%.2\n%.2x\n%.2x\n%.2x\n", *r1, *r2, *r3, *r4);  
	printf("Bytes of int: %x, %lu\n", &t, sizeof(t));
	printf("Bytes of float: %x, %lu\n", &f, sizeof(f));
	printf("Bytes of double: %x, %lu\n", &d, sizeof(d));
	// Задание 5
	int num = llint();
	unsigned char* byteptr = (unsigned char*)&num;
	int size = 0;

	// Проверяем 8 байт (64 бит)
	for (int i = 0; i < 4; i++) {
		byteptr[i] = 0; // Заполняем байты нулями
		size++;
	}

	printf("Размер long long int: %d байт\n", size);
}