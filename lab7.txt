#include <stdio.h>
#include <locale.h>
#include <math.h>

int toint(char* roman) {
    int value = 0;

    switch (roman[0]) {
    case 'M': value += 1000; break;
    case 'D': value += 500; break;
    case 'C':
        switch (roman[1]) {
        case 'M': value += 900; break;
        case 'D': value += 400; break;
        default: value += 100; break;
        }
        break;
    case 'L': value += 50; break;
    case 'X':
        switch (roman[1]) {
        case 'C': value += 90; break;
        case 'L': value += 40; break;
        default: value += 10; break;
        }
        break;
    case 'V': value += 5; break;
    case 'I':
        switch (roman[1]) {
        case 'X': value += 9; break;
        case 'V': value += 4; break;
        default: value += 1; break;
        }
        break;
    }

    // Проверяем следующие символы
    switch (roman[1]) {
    case 'M': value += 1000; break;
    case 'D': value += 500; break;
    case 'C':
        switch (roman[2]) {
        case 'M': value += 900; break;
        case 'D': value += 400; break;
        default: value += 100; break;
        }
        break;
    case 'L': value += 50; break;
    case 'X':
        switch (roman[2]) {
        case 'C': value += 90; break;
        case 'L': value += 40; break;
        default: value += 10; break;
        }
        break;
    case 'V': value += 5; break;
    case 'I':
        switch (roman[2]) {
        case 'X': value += 9; break;
        case 'V': value += 4; break;
        default: value += 1; break;
        }
        break;
    }

    switch (roman[2]) {
    case 'M': value += 1000; break;
    case 'D': value += 500; break;
    case 'C':
        switch (roman[3]) {
        case 'M': value += 900; break;
        case 'D': value += 400; break;
        default: value += 100; break;
        }
        break;
    case 'L': value += 50; break;
    case 'X':
        switch (roman[3]) {
        case 'C': value += 90; break;
        case 'L': value += 40; break;
        default: value += 10; break;
        }
        break;
    case 'V': value += 5; break;
    case 'I':
        switch (roman[3]) {
        case 'X': value += 9; break;
        case 'V': value += 4; break;
        default: value += 1; break;
        }
        break;
    }

    switch (roman[3]) {
    case 'M': value += 1000; break;
    case 'D': value += 500; break;
    case 'C':
        switch (roman[4]) {
        case 'M': value += 900; break;
        case 'D': value += 400; break;
        default: value += 100; break;
        }
        break;
    case 'L': value += 50; break;
    case 'X':
        switch (roman[4]) {
        case 'C': value += 90; break;
        case 'L': value += 40; break;
        default: value += 10; break;
        }
        break;
    case 'V': value += 5; break;
    case 'I':
        switch (roman[4]) {
        case 'X': value += 9; break;
        case 'V': value += 4; break;
        default: value += 1; break;
        }
        break;
    }

    return value;
}

int main()

{
	setlocale(LC_ALL, "RUS");
	char c;
	printf("Введите цифру или букву:");
	scanf("%c", &c);//считывание с консоли
	switch (c)
	{
	case '1':case '2':case '3':case '4':case '5':case '6':case '7':case '8':case '9':
		printf("Введена цифра.\n");
		break;
	default:
		printf("Буква\n");
	}


	// Задание 2
	char i;
	float a, b;
	printf("Введите первое числo \n");
	scanf("%f", &a);
	printf("Введите знак \n");
	scanf(" %c", &i);
	printf("Введите второе числo \n");
	scanf("%f", &b); 


	switch (i)
	{
	case '+':
		printf("%lf\n", a + b);
		break;
	case '-':
		printf("%lf\n", a - b);
		break;
	case '*':
		printf("%lf\n", a * b);
		break;
	case '/':
		printf("%lf\n", a / b);
		break;
	case '^':
		printf("%lf\n", pow(a, b));
		break;
	}
	// Задание 3 
	
    char roman[16];
    printf("Введите год в римских цифрах: ");
    scanf("%s", roman);
    int arabicValue = toint(roman);
    printf("Арабское значение: %d\n", arabicValue);
    return 0;

}
